name: GoScry CI/CD

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'
        check-latest: true
    
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Get dependencies
      run: go mod download
    
    - name: Build
      run: go build -v ./cmd/goscry
    
    - name: Test
      run: go test -v ./...
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: goscry
        path: goscry
        retention-days: 5

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.20'
        check-latest: true
        
    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
        
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: goscry
        path: ./
        
    - name: Build for all platforms
      run: |
        mkdir -p dist
        # Build for Linux
        GOOS=linux GOARCH=amd64 go build -o dist/goscry-linux-amd64 ./cmd/goscry
        # Build for MacOS
        GOOS=darwin GOARCH=amd64 go build -o dist/goscry-darwin-amd64 ./cmd/goscry
        GOOS=darwin GOARCH=arm64 go build -o dist/goscry-darwin-arm64 ./cmd/goscry
        # Build for Windows
        GOOS=windows GOARCH=amd64 go build -o dist/goscry-windows-amd64.exe ./cmd/goscry
        
    - name: ZIP binaries
      run: |
        cd dist
        chmod +x goscry-linux-amd64 goscry-darwin-amd64 goscry-darwin-arm64
        zip -r goscry-linux-amd64.zip goscry-linux-amd64
        zip -r goscry-darwin-amd64.zip goscry-darwin-amd64
        zip -r goscry-darwin-arm64.zip goscry-darwin-arm64
        zip -r goscry-windows-amd64.zip goscry-windows-amd64.exe
        
    - name: Extract tag name
      id: tag
      run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref }}
        name: GoScry ${{ steps.tag.outputs.tag }}
        draft: false
        prerelease: false
        generate_release_notes: true
        files: |
          dist/goscry-linux-amd64.zip
          dist/goscry-darwin-amd64.zip
          dist/goscry-darwin-arm64.zip
          dist/goscry-windows-amd64.zip
